{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "LLMaestro Configuration",
  "description": "Configuration schema for LLMaestro",
  "type": "object",
  "required": ["llm"],
  "properties": {
    "llm": {
      "type": "object",
      "description": "LLM provider configuration",
      "required": ["default_provider", "providers"],
      "properties": {
        "default_provider": {
          "type": "string",
          "description": "The default LLM provider to use",
          "enum": ["anthropic", "google"],
          "default": "anthropic"
        },
        "providers": {
          "type": "object",
          "description": "Configuration for each provider",
          "properties": {
            "anthropic": {
              "type": "object",
              "description": "Anthropic-specific configuration",
              "required": ["api_key"],
              "properties": {
                "api_key": {
                  "type": "string",
                  "description": "Anthropic API key",
                  "pattern": "^sk-ant-[a-zA-Z0-9._-]+$"
                },
                "models": {
                  "type": "array",
                  "description": "Available Anthropic models",
                  "items": {
                    "type": "string",
                    "enum": [
                      "claude-3-opus-latest",
                      "claude-3-5-sonnet-latest",
                      "claude-3-haiku-latest"
                    ]
                  },
                  "default": ["claude-3-5-sonnet-latest"]
                }
              }
            },
            "google": {
              "type": "object",
              "description": "Google-specific configuration",
              "required": ["api_key"],
              "properties": {
                "api_key": {
                  "type": "string",
                  "description": "Google API key"
                },
                "models": {
                  "type": "array",
                  "description": "Available Google models",
                  "items": {
                    "type": "string",
                    "enum": [
                      "gemini-pro",
                      "gemini-1.5-flash"
                    ]
                  },
                  "default": ["gemini-pro"]
                }
              }
            }
          }
        },
        "default_settings": {
          "type": "object",
          "description": "Default settings for all models",
          "properties": {
            "max_tokens": {
              "type": "integer",
              "description": "Maximum number of tokens to generate in responses",
              "minimum": 1,
              "maximum": 4096,
              "default": 1024
            },
            "temperature": {
              "type": "number",
              "description": "Sampling temperature for response generation",
              "minimum": 0,
              "maximum": 1,
              "default": 0.7
            }
          }
        }
      }
    },
    "agents": {
      "type": "object",
      "description": "Agent pool configuration",
      "properties": {
        "max_agents": {
          "type": "integer",
          "description": "Maximum number of concurrent agents",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        },
        "default_agent_type": {
          "type": "string",
          "description": "Default agent type to use",
          "default": "general"
        },
        "agent_types": {
          "type": "object",
          "description": "Configuration for different agent types",
          "properties": {
            "general": {
              "type": "object",
              "description": "General purpose agent configuration",
              "properties": {
                "provider": {
                  "type": "string",
                  "enum": ["anthropic", "google"]
                },
                "model": {
                  "type": "string"
                },
                "max_tokens": {
                  "type": "integer",
                  "minimum": 1
                },
                "temperature": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                }
              }
            },
            "fast": {
              "type": "object",
              "description": "Fast, lightweight agent configuration",
              "$ref": "#/properties/agents/properties/agent_types/properties/general"
            },
            "specialist": {
              "type": "object",
              "description": "Specialist agent configuration",
              "$ref": "#/properties/agents/properties/agent_types/properties/general"
            }
          }
        }
      }
    },
    "storage": {
      "type": "object",
      "description": "Storage configuration for intermediate results",
      "required": ["path"],
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to store intermediate results",
          "default": "chain_storage"
        },
        "format": {
          "type": "string",
          "description": "Storage format for intermediate results",
          "enum": ["json", "pickle", "yaml"],
          "default": "json"
        }
      }
    },
    "visualization": {
      "type": "object",
      "description": "Configuration for the visualization server",
      "properties": {
        "host": {
          "type": "string",
          "description": "Host to bind the visualization server to",
          "default": "localhost"
        },
        "port": {
          "type": "integer",
          "description": "Port to run the visualization server on",
          "minimum": 1024,
          "maximum": 65535,
          "default": 8765
        }
      }
    },
    "logging": {
      "type": "object",
      "description": "Logging configuration",
      "properties": {
        "level": {
          "type": "string",
          "description": "Logging level",
          "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"],
          "default": "INFO"
        },
        "file": {
          "type": "string",
          "description": "Path to log file (if file logging is desired)",
          "examples": ["orchestrator.log"]
        }
      }
    }
  }
}
