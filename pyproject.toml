[build-system]
requires = [
    "poetry-core>=1.0.0",
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "llmaestro"
version = "0.1.7"
description = "A system for orchestrating LLM tasks that exceed context limits"
authors = [
    "billthefighter <billthefighter@gmail.com>",
]
readme = "README.md"
packages = [
    { include = "llmaestro", from = "src" },
]
license = "MIT"
homepage = "https://github.com/billthefighter/llmaestro"
repository = "https://github.com/billthefighter/llmaestro"
documentation = "https://github.com/billthefighter/llmaestro#readme"
keywords = [
    "llm",
    "orchestration",
    "ai",
    "language-models",
    "context-management",
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.0.0"
litellm = "^1.0.0"
google-generativeai = "^0.3.2"
py4cytoscape = "^1.5.0"
pandas = "^2.0.0"
networkx = "^3.0"
click = "^8.1.0"
pyyaml = "^6.0.1"
websockets = "^14.2"
transformers = "^4.36.0"
pillow = "^11.1.0"
pdf2image = "^1.17.0"
tiktoken = "^0.8.0"
sqlalchemy = "^2.0.0"

[tool.poetry.dependencies.anthropic]
version = "^0.45.2"
allow-prereleases = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
ruff = "^0.1.0"
pre-commit = "^4.1.0"
reportlab = "^4.3.0"
beautifulsoup4 = "^4.12.0"
tomli = "^2.0.1"
tomli-w = "^1.0.0"

[tool.poetry.scripts]
llmaestro = "src.llmaestro.cli:main"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
pythonpath = [
    "src",
]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]

[tool.ruff]
line-length = 120
target-version = "py311"
select = [
    "E",
    "F",
    "B",
    "I",
]
ignore = []
exclude = [
    "tests/*",
    "test_*.py",
    "**/tests/*",
    "**/*_test.py",
    "examples/*",
    "**/examples/*",
]

[tool.pydantic]
warn_field_name_shadows = false
warn_config_key_change = false
